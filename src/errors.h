#ifndef ERRORS_H
#define ERRORS_H

#include "hasp_api.h"
#include <map>

static std::map<hasp_status_t, const char*> hasp_statusmap = {
  {HASP_STATUS_OK, "Operation completed successfully"},
  {HASP_MEM_RANGE, "Invalid memory address"},
  {HASP_INV_PROGNUM_OPT, "Unknown/invalid Feature ID option"},
  {HASP_INSUF_MEM, "Memory allocation failed"},
  {HASP_TMOF, "Too many open Features"},
  {HASP_ACCESS_DENIED, "Feature access denied"},
  {HASP_INCOMPAT_FEATURE, "Incompatible Feature"},
  {HASP_HASP_NOT_FOUND, "HASP Key not found"},
  {HASP_TOO_SHORT, "Encryption/decryption length too short"},
  {HASP_INV_HND, "Invalid handle"},
  {HASP_INV_FILEID, "Invalid file ID / memory descriptor"},
  {HASP_OLD_DRIVER, "Driver or support daemon version too old"},
  {HASP_NO_TIME, "Real time support not available"},
  {HASP_SYS_ERR, "Generic error from host system call"},
  {HASP_NO_DRIVER, "HASP driver not found"},
  {HASP_INV_FORMAT, "Unrecognized info format"},
  {HASP_REQ_NOT_SUPP, "Request not supported"},
  {HASP_INV_UPDATE_OBJ, "Invalid update object"},
  {HASP_KEYID_NOT_FOUND, "Key with specified ID was not found"},
  {HASP_INV_UPDATE_DATA, "Update data consistency check failed"},
  {HASP_INV_UPDATE_NOTSUPP, "Update not supported by this key"},
  {HASP_INV_UPDATE_CNTR, "Update counter mismatch"},
  {HASP_INV_VCODE, "Invalid Vendor Code"},
  {HASP_ENC_NOT_SUPP, "Requested encryption algorithm not supported"},
  {HASP_INV_TIME, "Invalid date/time"},
  {HASP_NO_BATTERY_POWER, "Clock has no power"},
  {HASP_NO_ACK_SPACE, "Update requested ack., but no area to return it"},
  {HASP_TS_DETECTED, "Terminal services (remote terminal) detected"},
  {HASP_FEATURE_TYPE_NOT_IMPL, "Feature type not implemented"},
  {HASP_UNKNOWN_ALG, "Unknown algorithm"},
  {HASP_INV_SIG, "Signature check failed"},
  {HASP_FEATURE_NOT_FOUND, "Feature not found"},
  {HASP_NO_LOG, "Trace log is not enabled"},
  {HASP_LOCAL_COMM_ERR, "Communication error between application and local LM"},
  {HASP_UNKNOWN_VCODE, "Vendor Code not recognized by API)"},
  {HASP_INV_SPEC, "Invalid XML spec"},
  {HASP_INV_SCOPE, "Invalid XML scope"},
  {HASP_TOO_MANY_KEYS, "Too many keys connected"},
  {HASP_TOO_MANY_USERS, "Too many users"},
  {HASP_BROKEN_SESSION, "Broken session"},
  {HASP_REMOTE_COMM_ERR, "Communication error between local and remote License Manager"},
  {HASP_FEATURE_EXPIRED, "The feature is expired"},
  {HASP_OLD_LM, "HASP LM version is too old"},
  {HASP_DEVICE_ERR, "HASP SL secure storage I/O error or USB request error"},
  {HASP_UPDATE_BLOCKED, "Update installation not allowed"},
  {HASP_TIME_ERR, "System time has been tampered"},
  {HASP_SCHAN_ERR, "Secure channel communication error"},
  {HASP_STORAGE_CORRUPT, "Secure storage contains garbage"},
  {HASP_NO_VLIB, "Vendor lib cannot be found"},
  {HASP_INV_VLIB, "Vendor lib cannot be loaded"},
  {HASP_SCOPE_RESULTS_EMPTY, "No feature matching scope found"},
  {HASP_VM_DETECTED, "Virtual machine detected"},
  {HASP_HARDWARE_MODIFIED, "HASP update incompatible with this hardware; HASP key is locked to other hardware"},
  {HASP_USER_DENIED, "Login denied because of user restrictions"},
  {HASP_UPDATE_TOO_OLD, "Update was already installed"},
  {HASP_UPDATE_TOO_NEW, "Another update must be installed first"},
  {HASP_OLD_VLIB, "Vendor lib is too old"},
  {HASP_UPLOAD_ERROR, "Upload via ACC failed, e.g. because of illegal format"},
  {HASP_INV_RECIPIENT, "Invalid XML \"recipient\" parameter"},
  {HASP_INV_DETACH_ACTION, "Invalid XML \"action\" parameter"},
  {HASP_TOO_MANY_PRODUCTS, "Scope does not specify a unique Product"},
  {HASP_INV_PRODUCT, "Invalid Product information"},
  {HASP_UNKNOWN_RECIPIENT, "Unknown Recipient; update can only be applied to the Recipient specified in hasp_detach(}, and not to this computer"},
  {HASP_INV_DURATION, "Invalid duration specified"},
  {HASP_CLONE_DETECTED, "Cloned HASP SL secure storage detected"},
  {HASP_NO_API_DYLIB, "A required API dynamic library was not found"},
  {HASP_INV_API_DYLIB, "The found and assigned API dynamic library could not verified"},
  {HASP_INVALID_OBJECT, "Object incorrectly initialized"},
  {HASP_INVALID_PARAMETER, "Invalid function parameter"},
  {HASP_ALREADY_LOGGED_IN, "Logging in twice to the same object"},
  {HASP_ALREADY_LOGGED_OUT, "Logging out twice from the same object"},
  {HASP_NOT_IMPL, "Capability isn't available"},
  {HASP_INT_ERR, "Internal API error"}
};

#endif // ERRORS_H
